/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

/*!
 *
 * Evgeniy Ivanov - 2018
 * busforward@gmail.com
 * Skype: ivanov_ea
 *
 */
var app = {
  pageScroll: '',
  pageFs: 16,
  lgWidth: 1200,
  mdWidth: 992,
  smWidth: 768,
  resized: false,
  iOS: function () {
    return navigator.userAgent.match(/iPhone|iPad|iPod/i);
  },
  touchDevice: function () {
    return navigator.userAgent.match(/iPhone|iPad|iPod|Android|BlackBerry|Opera Mini|IEMobile/i);
  }
};

function isLgWidth() {
  return $(window).width() >= app.lgWidth;
} // >= 1200


function isMdWidth() {
  return $(window).width() >= app.mdWidth && $(window).width() < app.lgWidth;
} //  >= 992 && < 1200


function isSmWidth() {
  return $(window).width() >= app.smWidth && $(window).width() < app.mdWidth;
} // >= 768 && < 992


function isXsWidth() {
  return $(window).width() < app.smWidth;
} // < 768


function isIOS() {
  return app.iOS();
} // for iPhone iPad iPod


function isTouch() {
  return app.touchDevice();
} // for touch device


$(document).ready(function () {
  // Хак для клика по ссылке на iOS
  if (isIOS()) {
    $(function () {
      $(document).on('touchend', 'a', $.noop);
    });
  } // Запрет "отскока" страницы при клике по пустой ссылке с href="#"


  $('[href="#"]').click(function (event) {
    event.preventDefault();
  }); // Inputmask.js
  // $('[name=tel]').inputmask("+9(999)999 99 99",{ showMaskOnHover: false });
  // formSubmit();
  // checkOnResize();

  $('.heroes__slider').slick({
    slidesToShow: 3,
    slidesToScroll: 1,
    nextArrow: '<button class="slick-next slick-arrow"></button>',
    prevArrow: '<button class="slick-prev slick-arrow"></button>',
    responsive: [{
      breakpoint: 767,
      settings: {
        slidesToShow: 1,
        slidesToScroll: 1 // arrows: false,
        // dotts: true

      }
    }]
  });
  $('.preparation__slider').slick({
    dots: false,
    arrows: false,
    infinite: true,
    autoplay: true,
    // speed: 300,
    slidesToShow: 1,
    slidesToScroll: 1
  });
  parallax();
  playVideo('#rezultat');
  mouseMoveParallax();
});
$(window).resize(function (event) {
  var windowWidth = $(window).width(); // Запрещаем выполнение скриптов при смене только высоты вьюпорта (фикс для скролла в IOS и Android >=v.5)

  if (app.resized == windowWidth) {
    return;
  }

  app.resized = windowWidth;
  parallax(); // checkOnResize();
});

function checkOnResize() {// fontResize();
}

function playVideo(box) {
  let section = $(box),
      fullscr = $('.rezultat__full'),
      preview = {
    id: 427315595,
    // loop: false,
    volume: 0 // controls: true,
    // autoplay: false,
    // width: '100%'

  },
      player = new Vimeo.Player('video', preview),
      played = false,
      top = $(window).scrollTop(),
      start = section.offset().top - 100; // console.log(top);
  // console.log(start);

  $(window).scroll(function () {
    top = $(window).scrollTop();
    start = section.offset().top - 100;

    if (top > start && top < start + section.height()) {
      if (played === false) {
        player.play();
        played = true;
        player.setVolume(0);
        console.log('play');
      }
    } else {
      played = false;
      player.pause();
      console.log('pause');
    }
  });
  fullscr.on('click', function (e) {
    player.requestFullscreen();
  });
  player.on('fullscreenchange', function (e) {
    console.log(e.fullscreen);

    if (e.fullscreen) {
      player.setVolume(1);
    } else {
      player.setVolume(0);
    } // player.requestFullscreen();
    // player.setVolume(1);

  }); // fullscr.on('click', function() {
  //     modal.modal('show');
  // });
  //
  // modal.on('show.bs.modal', function() {
  //     video.appendTo('.videoModal .modal-content');
  //     player.setVolume(1);
  //     // player.play();
  //     played = true;
  // });
  //
  // modal.on('hide.bs.modal', function() {
  //     video.prependTo('.rezultat__video');
  //     player.setVolume(0);
  // });
}

function parallax() {
  if (isXsWidth()) return false;
  let item = $('.parallaxItem');
  var el = document.querySelector('body');
  app.pageFs = window.getComputedStyle(el, null).getPropertyValue('font-size').replace('px', '') * 1;
  let top = $(window).scrollTop() / app.pageFs;
  let speed; // console.log(app.pageFs);

  item.each(function (index, el) {
    top = $(window).scrollTop() / app.pageFs;
    speed = $(this).data('speed');
    $(el).attr('style', 'transform: translateY(-' + top * speed / 10 + 'em)');
  });
}

function mouseMoveParallax() {
  let wrapper = $('.scenario');
  let item = $('.scenario__paper img');
  let speed = 0;
  let offsetX;
  let offsetY;
  if (isXsWidth()) return false;
  wrapper.on('mousemove', function (even) {
    // console.log(even.screenX);
    console.log(even.clientX - $(window).width() / 2);
    offsetX = -(even.clientX - $(window).width() / 2);
    offsetY = -(even.clientY - $(window).width() / 2);
    item.each(function (index, el) {
      speed = $(el).data('speed');
      $(el).attr('style', 'transform: translate3d(' + offsetX * speed / 1000 + 'em, ' + offsetY * speed / 1000 + 'em , 0)');
    });
  });
  wrapper.on('mouseleave', function (even) {
    item.each(function (index, el) {
      speed = $(el).data('speed');
      $(el).attr('style', 'transform: translate3d(0, 0 , 0)');
    });
  });
} // Проверка направления прокрутки вверх/вниз


function checkDirectionScroll() {
  var tempScrollTop,
      currentScrollTop = 0;
  $(window).scroll(function () {
    currentScrollTop = $(window).scrollTop();

    if (tempScrollTop < currentScrollTop) {
      app.pageScroll = "down";
    } else if (tempScrollTop > currentScrollTop) {
      app.pageScroll = "up";
    }

    tempScrollTop = currentScrollTop;
    parallax(); // playVideo('#rezultat');
  });
}

checkDirectionScroll();

/***/ })
/******/ ]);
//# sourceMappingURL=function.min.js.map